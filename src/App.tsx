// App.tsx
import { useState } from 'react';
import avatar from './assets/–ú–æ–ª–æ–¥–æ–π —á–µ–ª–æ–≤–µ–∫ –≤ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–º –≥–æ–ª–æ–≤–Ω–æ–º —É–±–æ—Ä–µ.png';
import './App.css';

function App() {
  const [screen, setScreen] = useState<'home' | 'step1' | 'step2' | 'step3'>('home');
  const [selectedKaz, setSelectedKaz] = useState<string | null>(null);
  const [matched, setMatched] = useState<{ [key: string]: string }>({});
  const [selectedAnswer, setSelectedAnswer] = useState<string | null>(null);
  const [selectedSentenceWords, setSelectedSentenceWords] = useState<string[]>([]);

  const wordPairs = [
    { kz: '–°”ô–ª–µ–º', ru: '–ü—Ä–∏–≤–µ—Ç' },
    { kz: '“ö–∞–ª–∞–π—Å—ã“£', ru: '–ö–∞–∫ –¥–µ–ª–∞' },
    { kz: '–ò”ô', ru: '–î–∞' },
    { kz: '–ñ–æ“õ', ru: '–ù–µ—Ç' },
  ];

  const quizWord = '–°”ô–ª–µ–º';
  const options = ['–ü–æ–∫–∞', '–ü—Ä–∏–≤–µ—Ç', '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ'];

  const sentenceKaz = '–ú–µ–Ω –º–µ–∫—Ç–µ–ø–∫–µ –±–∞—Ä–∞–º—ã–Ω';
  const sentenceWords = ['–Ø', '–≤', '—à–∫–æ–ª—É', '–∏–¥—É'];
  const correctSentence = ['–Ø', '–∏–¥—É', '–≤', '—à–∫–æ–ª—É'];

  const handleKazClick = (word: string) => setSelectedKaz(word);

  const handleRuClick = (word: string) => {
    if (!selectedKaz) return;
    const pair = wordPairs.find((p) => p.kz === selectedKaz);
    if (pair && pair.ru === word) {
      setMatched((prev) => ({ ...prev, [selectedKaz]: word }));
    } else {
      setMatched({});
    }
    setSelectedKaz(null);
  };

  const handleAnswerClick = (option: string) => setSelectedAnswer(option);

  const handleSentenceClick = (word: string) => {
    if (!selectedSentenceWords.includes(word)) {
      setSelectedSentenceWords([...selectedSentenceWords, word]);
    }
  };

  const resetAll = () => {
    setMatched({});
    setSelectedKaz(null);
    setSelectedAnswer(null);
    setSelectedSentenceWords([]);
  };

  return (
    <div className="container">
      {screen === 'home' && (
        <>
          <img src={avatar} alt="KazBot Logo" className="logo" />
          <h1>KazBot</h1>
          <p className="description">–¢–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∫–∞–∑–∞—Ö—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ kz</p>
          <div className="buttons">
            <button onClick={() => setScreen('step1')}>üìò –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ</button>
            <button>üí¨ –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ</button>
            <button>üéÆ –ò–≥—Ä–æ–≤–æ–π —Ä–µ–∂–∏–º</button>
          </div>
        </>
      )}

      {screen === 'step1' && (
        <>
          <h2>üìò –≠—Ç–∞–ø 1: –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å–ª–æ–≤</h2>
          <div className="columns">
            <div className="column">
              {wordPairs.map((pair) => (
                <button key={pair.kz} onClick={() => handleKazClick(pair.kz)}>
                  {pair.kz}
                </button>
              ))}
            </div>
            <div className="column">
              {wordPairs.map((pair) => (
                <button
                  key={pair.ru}
                  onClick={() => handleRuClick(pair.ru)}
                  className={matched[pair.kz] === pair.ru ? 'matched' : ''}>
                  {pair.ru}
                </button>
              ))}
            </div>
          </div>
          <div className="buttons">
            <button onClick={() => { resetAll(); setScreen('home'); }}>‚¨Ö –ù–∞–∑–∞–¥</button>
            <button onClick={() => setScreen('step2')}>‚û° –î–∞–ª–µ–µ</button>
          </div>
        </>
      )}

      {screen === 'step2' && (
        <>
          <h2>üß† –≠—Ç–∞–ø 2: –í—ã–±–æ—Ä –ø–µ—Ä–µ–≤–æ–¥–∞</h2>
          <p><strong>{quizWord}</strong></p>
          <div className="options">
            {options.map((opt) => (
              <button
                key={opt}
                onClick={() => handleAnswerClick(opt)}
                style={{ backgroundColor: selectedAnswer === opt ? (opt === '–ü—Ä–∏–≤–µ—Ç' ? 'lightgreen' : 'salmon') : '' }}>
                {opt}
              </button>
            ))}
          </div>
          <div className="buttons">
            <button onClick={() => { resetAll(); setScreen('step1'); }}>‚¨Ö –ù–∞–∑–∞–¥</button>
            <button onClick={() => setScreen('step3')}>‚û° –î–∞–ª–µ–µ</button>
          </div>
        </>
      )}

      {screen === 'step3' && (
        <>
          <h2>‚úçÔ∏è –≠—Ç–∞–ø 3: –°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</h2>
          <p>{sentenceKaz}</p>
          <div className="options">
            {sentenceWords.map((word) => (
              <button key={word} onClick={() => handleSentenceClick(word)}>
                {word}
              </button>
            ))}
          </div>
          <p><strong>{selectedSentenceWords.join(' ')}</strong></p>
          <div className="buttons">
            <button onClick={() => { resetAll(); setScreen('step2'); }}>‚¨Ö –ù–∞–∑–∞–¥</button>
            <button onClick={() => { resetAll(); setScreen('home'); }}>üè† –î–æ–º–æ–π</button>
          </div>
        </>
      )}
      <footer>@kzKazakhbot</footer>
    </div>
  );
}

export default App;


