// App.tsx
import { useState } from "react";
import "./App.css";
import avatar from "./assets/avatar.png";

function App() {
  const [screen, setScreen] = useState("home");
  const [selected, setSelected] = useState<string | null>(null);
  const [showResult, setShowResult] = useState(false);
  const [isCorrect, setCorrect] = useState(false);
  const [sentenceAnswer, setSentenceAnswer] = useState<string[]>([]);

  const wordPairs = [
    { kaz: "–°”ô–ª–µ–º", rus: "–ü—Ä–∏–≤–µ—Ç" },
    { kaz: "“ö–∞–ª—ã“£ “õ–∞–ª–∞–π", rus: "–ö–∞–∫ –¥–µ–ª–∞" },
    { kaz: "–ò”ô", rus: "–î–∞" },
    { kaz: "–ñ–æ“õ", rus: "–ù–µ—Ç" },
  ];

  const quizWord = "–°”ô–ª–µ–º";
  const options = ["–ü–æ–∫–∞", "–ü—Ä–∏–≤–µ—Ç", "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ"];

  const sentence = "–ú–µ–Ω –º–µ–∫—Ç–µ–ø–∫–µ –±–∞—Ä–∞–º—ã–Ω";
  const sentenceWords = ["–Ø", "–≤", "—à–∫–æ–ª—É", "–∏–¥—É"];
  const correctSentence = ["–Ø", "–≤", "—à–∫–æ–ª—É", "–∏–¥—É"];

  const handleAnswer = (option: string) => {
    const correct = option === "–ü—Ä–∏–≤–µ—Ç";
    setCorrect(correct);
    setShowResult(true);
  };

  const handleSentenceSelect = (word: string) => {
    setSentenceAnswer([...sentenceAnswer, word]);
  };

  const reset = () => {
    setShowResult(false);
    setCorrect(false);
    setSentenceAnswer([]);
  };

  return (
    <div className="container">
      {screen === "home" && (
        <>
          <img src={avatar} alt="KazBot Logo" className="logo" />
          <h1>KazBot</h1>
          <p className="description">–¢–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∫–∞–∑–∞—Ö—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ kz</p>
          <div className="buttons">
            <button onClick={() => setScreen("match")}>üìñ –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ</button>
            <button>üß† –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ</button>
            <button>üéÆ –ò–≥—Ä–æ–≤–æ–π —Ä–µ–∂–∏–º</button>
          </div>
          <footer>@kzKazakhbot</footer>
        </>
      )}

      {screen === "match" && (
        <>
          <h2>üß© –°–æ–µ–¥–∏–Ω–∏ –ø–∞—Ä—ã</h2>
          <div className="match-columns">
            <div>
              {wordPairs.map((pair, index) => (
                <div key={index} className="word-box">{pair.kaz}</div>
              ))}
            </div>
            <div>
              {wordPairs.map((pair, index) => (
                <div key={index} className="word-box">{pair.rus}</div>
              ))}
            </div>
          </div>
          <button onClick={() => setScreen("quiz")} className="next-button">‚û°Ô∏è –î–∞–ª–µ–µ</button>
        </>
      )}

      {screen === "quiz" && (
        <>
          <h2>üß† –í—ã–±–µ—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞: {quizWord}</h2>
          <div className="quiz-options">
            {options.map((option, index) => (
              <button
                key={index}
                onClick={() => handleAnswer(option)}
                className={showResult ? (option === "–ü—Ä–∏–≤–µ—Ç" ? "correct" : "incorrect") : ""}
              >
                {option}
              </button>
            ))}
          </div>
          {showResult && (
            <p>{isCorrect ? "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!" : "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!"}</p>
          )}
          <button onClick={() => setScreen("sentence")} className="next-button">‚û°Ô∏è –î–∞–ª–µ–µ</button>
        </>
      )}

      {screen === "sentence" && (
        <>
          <h2>‚úçÔ∏è –°–æ—Å—Ç–∞–≤—å –ø–µ—Ä–µ–≤–æ–¥:</h2>
          <p><strong>{sentence}</strong></p>
          <div className="sentence-constructor">
            {sentenceWords.map((word, index) => (
              <button key={index} onClick={() => handleSentenceSelect(word)}>{word}</button>
            ))}
          </div>
          <p>–í–∞—à –æ—Ç–≤–µ—Ç: {sentenceAnswer.join(" ")}</p>
          <button onClick={reset} className="next-button">üîÅ –ó–∞–Ω–æ–≤–æ</button>
        </>
      )}
    </div>
  );
}

export default App;




