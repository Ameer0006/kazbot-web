import { useState } from "react";
import "./App.css";
import avatar from "./assets/avatar.png";

function App() {
  const [screen, setScreen] = useState<"home" | "level" | "match">("home");
  const [selectedKaz, setSelectedKaz] = useState<string | null>(null);
  const [matched, setMatched] = useState<[string, string][]>([]);

  const wordPairs = [
    { kaz: "–°”ô–ª–µ–º", rus: "–ü—Ä–∏–≤–µ—Ç" },
    { kaz: "“ö–∞–ª–∞–π—Å—ã“£", rus: "–ö–∞–∫ –¥–µ–ª–∞" },
    { kaz: "–ñ–æ“õ", rus: "–ù–µ—Ç" },
    { kaz: "–ò”ô", rus: "–î–∞" },
    { kaz: "–ö”©–º–µ–∫", rus: "–ü–æ–º–æ—â—å" },
    { kaz: "–û“õ—É", rus: "–£—á—ë–±–∞" },
  ];

  const handleMatch = (rus: string) => {
    if (!selectedKaz) return;
    const correctPair = wordPairs.find(pair => pair.kaz === selectedKaz);
    if (correctPair && correctPair.rus === rus) {
      setMatched(prev => [...prev, [selectedKaz, rus]]);
    }
    setSelectedKaz(null);
  };

  const reset = () => {
    setMatched([]);
    setSelectedKaz(null);
  };

  if (screen === "home") {
    return (
      <div className="container">
        <img src={avatar} alt="KazBot Logo" className="logo" />
        <h1>KazBot</h1>
        <p className="description">–¢–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∫–∞–∑–∞—Ö—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ kz</p>
        <div className="buttons">
          <button onClick={() => setScreen("level")}>üìö –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ</button>
          <button onClick={() => alert("üß† –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ ‚Äî —Å–∫–æ—Ä–æ!")}>üí¨ –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ</button>
          <button onClick={() => alert("üéÆ –ò–≥—Ä–æ–≤–æ–π —Ä–µ–∂–∏–º ‚Äî —Å–∫–æ—Ä–æ!")}>üéÆ –ò–≥—Ä–æ–≤–æ–π —Ä–µ–∂–∏–º</button>
        </div>
        <footer>@kzKazakhbot</footer>
      </div>
    );
  }

  if (screen === "level") {
    return (
      <div className="container">
        <h2>–í—ã–±–µ—Ä–∏ —É—Ä–æ–≤–µ–Ω—å</h2>
        <div className="buttons">
          <button onClick={() => setScreen("match")}>üî∞ –ù–∞—á–∞–ª—å–Ω—ã–π</button>
          <button disabled>üî∑ –°—Ä–µ–¥–Ω–∏–π (—Å–∫–æ—Ä–æ)</button>
          <button disabled>üî∂ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π (—Å–∫–æ—Ä–æ)</button>
        </div>
        <button className="back" onClick={() => setScreen("home")}>‚Üê –ù–∞–∑–∞–¥</button>
      </div>
    );
  }

  if (screen === "match") {
    const kazWords = wordPairs.map(pair => pair.kaz);
    const rusWords = wordPairs.map(pair => pair.rus);

    return (
      <div className="container">
        <h2>üîó –°–æ–µ–¥–∏–Ω–∏ –ø–∞—Ä—ã —Å–ª–æ–≤</h2>
        <div className="columns">
          <div>
            {kazWords.map(kaz => (
              <button
                key={kaz}
                className={selectedKaz === kaz ? "selected" : ""}
                onClick={() => setSelectedKaz(kaz)}
              >
                {kaz}
              </button>
            ))}
          </div>
          <div>
            {rusWords.map(rus => (
              <button key={rus} onClick={() => handleMatch(rus)}>
                {rus}
              </button>
            ))}
          </div>
        </div>
        <div>
          <p>–°–æ–≤–ø–∞–¥–µ–Ω–∏—è: {matched.length} / {wordPairs.length}</p>
          {matched.length === wordPairs.length && <p>üéâ –í—Å–µ —Å–ª–æ–≤–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω—ã!</p>}
          <button onClick={reset}>üîÑ –ó–∞–Ω–æ–≤–æ</button>
          <button className="back" onClick={() => setScreen("level")}>‚Üê –ù–∞–∑–∞–¥</button>
        </div>
      </div>
    );
  }

  return null;
}

export default App;





