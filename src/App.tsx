// App.tsx
import { useState } from "react";
import "./App.css";
import avatar from "./assets/–ú–æ–ª–æ–¥–æ–π —á–µ–ª–æ–≤–µ–∫ –≤ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–º –≥–æ–ª–æ–≤–Ω–æ–º —É–±–æ—Ä–µ.png";

function App() {
  const [screen, setScreen] = useState("home");
  const [selected, setSelected] = useState<string | null>(null);
  const [showResult, setShowResult] = useState(false);
  const [isCorrect, setIsCorrect] = useState(false);
  const [sentenceAnswer, setSentenceAnswer] = useState<string[]>([]);

  const wordPairs = [
    { kaz: "–°”ô–ª–µ–º", rus: "–ü—Ä–∏–≤–µ—Ç" },
    { kaz: "“ö–∞–ª—ã“£ “õ–∞–ª–∞–π", rus: "–ö–∞–∫ –¥–µ–ª–∞" },
    { kaz: "–ò”ô", rus: "–î–∞" },
    { kaz: "–ñ–æ“õ", rus: "–ù–µ—Ç" },
  ];

  const quizWord = "–°”ô–ª–µ–º";
  const quizOptions = ["–ü–æ–∫–∞", "–ü—Ä–∏–≤–µ—Ç", "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ"];

  const sentence = "–ú–µ–Ω –º–µ–∫—Ç–µ–ø–∫–µ –±–∞—Ä–∞–º—ã–Ω";
  const sentenceWords = ["–Ø", "–≤", "—à–∫–æ–ª—É", "–∏–¥—É"];
  const correctSentence = ["–Ø", "–∏–¥—É", "–≤", "—à–∫–æ–ª—É"];

  const handleAnswer = (option: string) => {
    const correct = option === "–ü—Ä–∏–≤–µ—Ç";
    setIsCorrect(correct);
    setShowResult(true);
  };

  const handleSentenceSelect = (word: string) => {
    setSentenceAnswer((prev) => [...prev, word]);
  };

  const reset = () => {
    setSentenceAnswer([]);
  };

  const handleLearnClick = () => setScreen("lesson");
  const handleReviewClick = () => alert("üß† –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ —Å–ª–æ–≤ ‚Äî –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!");
  const handleGameClick = () => alert("üéÆ –ò–≥—Ä–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...");

  return (
    <div className="container">
      {screen === "home" && (
        <>
          <img src={avatar} alt="KazBot Logo" className="logo" />
          <h1>KazBot</h1>
          <p className="description">
            –¢–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∫–∞–∑–∞—Ö—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ kz
          </p>
          <div className="buttons">
            <button onClick={handleLearnClick}>üìñ –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ</button>
            <button onClick={handleReviewClick}>üß† –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ</button>
            <button onClick={handleGameClick}>üéÆ –ò–≥—Ä–æ–≤–æ–π —Ä–µ–∂–∏–º</button>
          </div>
          <footer>@kzKazakhbot</footer>
        </>
      )}

      {screen === "lesson" && (
        <div>
          <h2>–°–æ–µ–¥–∏–Ω–∏ —Å–ª–æ–≤–∞</h2>
          <div className="columns">
            <ul>
              {wordPairs.map((pair, i) => (
                <li key={i}>{pair.kaz}</li>
              ))}
            </ul>
            <ul>
              {wordPairs.map((pair, i) => (
                <li key={i}>{pair.rus}</li>
              ))}
            </ul>
          </div>

          <h2>–í—ã–±–µ—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥</h2>
          <p>{quizWord}</p>
          <div className="buttons">
            {quizOptions.map((option, i) => (
              <button
                key={i}
                onClick={() => handleAnswer(option)}
                style={{
                  backgroundColor: showResult
                    ? option === "–ü—Ä–∏–≤–µ—Ç"
                      ? "lightgreen"
                      : option === selected
                      ? "salmon"
                      : "white"
                    : "white",
                }}
              >
                {option}
              </button>
            ))}
          </div>

          <h2>–°–æ–±–µ—Ä–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</h2>
          <p>{sentence}</p>
          <div className="sentence-buttons">
            {sentenceWords.map((word, i) => (
              <button key={i} onClick={() => handleSentenceSelect(word)}>
                {word}
              </button>
            ))}
          </div>
          <p>–û—Ç–≤–µ—Ç: {sentenceAnswer.join(" ")}</p>
          <button onClick={reset}>üîÅ –°–±—Ä–æ—Å–∏—Ç—å</button>
        </div>
      )}
    </div>
  );
}

export default App;







