// App.tsx ‚Äî KazBot WebApp
import React, { useState, useEffect } from "react";
import "./App.css";
import avatar from "./assets/–ú–æ–ª–æ–¥–æ–π —á–µ–ª–æ–≤–µ–∫ –≤ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–º –≥–æ–ª–æ–≤–Ω–æ–º —É–±–æ—Ä–µ.png";

function App() {
  const [screen, setScreen] = useState("home");
  const [level, setLevel] = useState("easy");
  const [score, setScore] = useState(0);
  const [stats, setStats] = useState({ correct: 0, incorrect: 0 });
  const [currentStage, setCurrentStage] = useState(1);

  useEffect(() => {
    console.log("Level:", level);
    console.log("Score:", score);
    console.log("Stats:", stats);
  }, [level, score, stats]);

  const handleStart = () => setScreen("lesson");
  const handleLevelSelect = (selectedLevel: string) => {
    setLevel(selectedLevel);
    setScreen("lesson");
  };

  const handleNextStage = () => {
    if (currentStage < 3) setCurrentStage(currentStage + 1);
  };

  const handlePrevStage = () => {
    if (currentStage > 1) setCurrentStage(currentStage - 1);
  };

  const renderHome = () => (
    <div className="container">
      <img src={avatar} alt="KazBot Logo" className="logo" />
      <h1>KazBot</h1>
      <p className="description">–¢–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∫–∞–∑–∞—Ö—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ kz</p>
      <div className="buttons">
        <button onClick={() => setScreen("level")}>üìò –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ</button>
        <button onClick={() => alert("üß† –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ ‚Äî –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")}>üí¨ –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ</button>
        <button onClick={() => alert("üéÆ –ò–≥—Ä–æ–≤–æ–π —Ä–µ–∂–∏–º ‚Äî —Å–∫–æ—Ä–æ")}>üéÆ –ò–≥—Ä–æ–≤–æ–π —Ä–µ–∂–∏–º</button>
      </div>
      <footer>@kzKazakhbot</footer>
    </div>
  );

  const renderLevelSelect = () => (
    <div className="container">
      <h2>–í—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è</h2>
      <div className="buttons">
        <button onClick={() => handleLevelSelect("easy")}>üî∞ –ù–∞—á–∞–ª—å–Ω—ã–π</button>
        <button onClick={() => handleLevelSelect("medium")}>‚öñÔ∏è –°—Ä–µ–¥–Ω–∏–π</button>
        <button onClick={() => handleLevelSelect("hard")}>üî• –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π</button>
      </div>
    </div>
  );

  const renderStage = () => (
    <div className="container">
      {currentStage === 1 && (
        <>
          <h2>üìò –≠—Ç–∞–ø 1: –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–∞—Ä —Å–ª–æ–≤</h2>
          <p>–ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫–∞–∑–∞—Ö—Å–∫–∏—Ö –∏ —Ä—É—Å—Å–∫–∏—Ö —Å–ª–æ–≤.</p>
        </>
      )}
      {currentStage === 2 && (
        <>
          <h2>üß† –≠—Ç–∞–ø 2: –í—ã–±–æ—Ä –ø–µ—Ä–µ–≤–æ–¥–∞</h2>
          <p>–ë—É–¥–µ—Ç —Å–ª–æ–≤–æ, –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–µ—Ä–µ—Ç –ø–µ—Ä–µ–≤–æ–¥.</p>
        </>
      )}
      {currentStage === 3 && (
        <>
          <h2>‚úçÔ∏è –≠—Ç–∞–ø 3: –°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</h2>
          <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–±—Ä–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–∑ —Å–ª–æ–≤.</p>
        </>
      )}
      <div className="buttons">
        {currentStage > 1 && <button onClick={handlePrevStage}>‚Üê –ù–∞–∑–∞–¥</button>}
        {currentStage < 3 && <button onClick={handleNextStage}>‚Üí –î–∞–ª–µ–µ</button>}
      </div>
      <footer>@kzKazakhbot</footer>
    </div>
  );

  return screen === "home"
    ? renderHome()
    : screen === "level"
    ? renderLevelSelect()
    : renderStage();
}

export default App;


