import { useState } from "react";
import "./App.css";
import avatar from "./assets/–ú–æ–ª–æ–¥–æ–π —á–µ–ª–æ–≤–µ–∫ –≤ –≥–æ–ª–æ–≤–Ω–æ–º —É–±–æ—Ä–µ.png";

function App() {
  const [screen, setScreen] = useState<"home" | "pairs" | "cards" | "sentence">("home");

  const [selectedKaz, setSelectedKaz] = useState<string | null>(null);
  const [selectedRus, setSelectedRus] = useState<string | null>(null);
  const [pairResult, setPairResult] = useState<string | null>(null);

  const [showResult, setShowResult] = useState(false);
  const [isCorrect, setIsCorrect] = useState(false);

  const [sentenceAnswer, setSentenceAnswer] = useState<string[]>([]);

  const wordPairs = [
    { kaz: "–°”ô–ª–µ–º", rus: "–ü—Ä–∏–≤–µ—Ç" },
    { kaz: "“ö–∞–ª “õ–∞–ª–∞–π", rus: "–ö–∞–∫ –¥–µ–ª–∞" },
    { kaz: "–ò”ô", rus: "–î–∞" },
    { kaz: "–ñ–æ“õ", rus: "–ù–µ—Ç" },
  ];

  const quizWord = "–°”ô–ª–µ–º";
  const options = ["–ü–æ–∫–∞", "–ü—Ä–∏–≤–µ—Ç", "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ"];

  const sentenceKaz = "–ú–µ–Ω –º–µ–∫—Ç–µ–ø–∫–µ –±–∞—Ä–∞–º—ã–Ω";
  const sentenceWords = ["–Ø", "–≤", "—à–∫–æ–ª—É", "–∏–¥—É"];
  const correctSentence = ["–Ø", "–∏–¥—É", "–≤", "—à–∫–æ–ª—É"];

  const handleAnswer = (option: string) => {
    const correct = option === "–ü—Ä–∏–≤–µ—Ç";
    setIsCorrect(correct);
    setShowResult(true);
  };

  const handleSentenceSelect = (word: string) => {
    setSentenceAnswer((prev) => [...prev, word]);
  };

  const resetSentence = () => {
    setSentenceAnswer([]);
  };

  const handlePairClick = () => {
    if (selectedKaz && selectedRus) {
      const match = wordPairs.find(p => p.kaz === selectedKaz && p.rus === selectedRus);
      if (match) {
        setPairResult(`‚úÖ ${selectedKaz} = ${selectedRus}`);
      } else {
        setPairResult(`‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞`);
      }
      setSelectedKaz(null);
      setSelectedRus(null);
    }
  };

  return (
    <div className="container">
      {screen === "home" && (
        <>
          <img src={avatar} alt="KazBot Logo" className="logo" />
          <h1>KazBot</h1>
          <p className="description">–¢–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∫–∞–∑–∞—Ö—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ kz</p>
          <div className="buttons">
            <button onClick={() => setScreen("pairs")}>üìö –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ</button>
            <button onClick={() => alert("üß† –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç!")}>üß† –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ</button>
            <button onClick={() => alert("üéÆ –ò–≥—Ä–æ–≤–æ–π —Ä–µ–∂–∏–º –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")}>üéÆ –ò–≥—Ä–æ–≤–æ–π —Ä–µ–∂–∏–º</button>
          </div>
          <footer>@kzKazakhbot</footer>
        </>
      )}

      {screen === "pairs" && (
        <div>
          <h2>üîó –°–æ–µ–¥–∏–Ω–∏ –ø–∞—Ä—ã —Å–ª–æ–≤</h2>
          <div className="buttons">
            <div>
              {wordPairs.map(({ kaz }) => (
                <button key={kaz} onClick={() => setSelectedKaz(kaz)}>{kaz}</button>
              ))}
            </div>
            <div>
              {wordPairs.map(({ rus }) => (
                <button key={rus} onClick={() => setSelectedRus(rus)}>{rus}</button>
              ))}
            </div>
          </div>
          {selectedKaz && selectedRus && (
            <div style={{ marginTop: "10px" }}>
              <p>–í—ã –≤—ã–±—Ä–∞–ª–∏: <strong>{selectedKaz} = {selectedRus}</strong></p>
              <button onClick={handlePairClick}>‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
            </div>
          )}
          {pairResult && (
            <div style={{ marginTop: "10px" }}>
              <p>{pairResult}</p>
              {pairResult.startsWith("‚úÖ") && <button onClick={() => setScreen("cards")}>‚û°Ô∏è –î–∞–ª–µ–µ</button>}
            </div>
          )}
        </div>
      )}

      {screen === "cards" && (
        <div>
          <h2>üìò –í—ã–±–µ—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞</h2>
          <p><strong>{quizWord}</strong></p>
          <div className="buttons">
            {options.map((option) => (
              <button
                key={option}
                onClick={() => handleAnswer(option)}
                style={{
                  backgroundColor: showResult
                    ? option === "–ü—Ä–∏–≤–µ—Ç"
                      ? "lightgreen"
                      : isCorrect
                      ? ""
                      : "salmon"
                    : "",
                }}
              >
                {option}
              </button>
            ))}
          </div>
          {showResult && (
            <div style={{ marginTop: "10px" }}>
              {isCorrect ? (
                <>
                  <p style={{ color: "green" }}>‚úÖ –í–µ—Ä–Ω–æ!</p>
                  <button onClick={() => { setScreen("sentence"); setShowResult(false); }}>‚û°Ô∏è –î–∞–ª–µ–µ</button>
                </>
              ) : (
                <p style={{ color: "red" }}>‚ùå –ù–µ–≤–µ—Ä–Ω–æ</p>
              )}
            </div>
          )}
        </div>
      )}

      {screen === "sentence" && (
        <div>
          <h2>üìå –°–æ—Å—Ç–∞–≤—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</h2>
          <p><strong>{sentenceKaz}</strong></p>
          <div className="buttons">
            {sentenceWords.map((word) => (
              <button
                key={word}
                onClick={() => handleSentenceSelect(word)}
                disabled={sentenceAnswer.includes(word)}
              >
                {word}
              </button>
            ))}
          </div>
          <div style={{ marginTop: "10px" }}>
            <p><strong>–í–∞—à –æ—Ç–≤–µ—Ç:</strong> {sentenceAnswer.join(" ")}</p>
          </div>
          {sentenceAnswer.length === correctSentence.length && (
            <div>
              {sentenceAnswer.join(" ") === correctSentence.join(" ") ? (
                <>
                  <p style={{ color: "green" }}>‚úÖ –ú–æ–ª–æ–¥–µ—Ü! –í—Å—ë –ø—Ä–∞–≤–∏–ª—å–Ω–æ.</p>
                  <button onClick={() => setScreen("home")}>üè† –í –º–µ–Ω—é</button>
                </>
              ) : (
                <>
                  <p style={{ color: "red" }}>‚ùå –û—à–∏–±–∫–∞! –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.</p>
                  <button onClick={resetSentence}>üîÅ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å</button>
                </>
              )}
            </div>
          )}
        </div>
      )}
    </div>
  );
}

export default App;



