// App.tsx
import { useState } from 'react';
import './App.css';
import avatar from './assets/–ú–æ–ª–æ–¥–æ–π —á–µ–ª–æ–≤–µ–∫ –≤ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–º –≥–æ–ª–æ–≤–Ω–æ–º —É–±–æ—Ä–µ.png';

function App() {
  const [screen, setScreen] = useState<'home' | 'match' | 'quiz' | 'sentence'>('home');
  const [selected, setSelected] = useState<string | null>(null);
  const [showResult, setShowResult] = useState(false);
  const [isCorrect, setIsCorrect] = useState(false);
  const [sentenceAnswer, setSentenceAnswer] = useState<string[]>([]);

  const wordPairs = [
    { kaz: '–°”ô–ª–µ–º', rus: '–ü—Ä–∏–≤–µ—Ç' },
    { kaz: '“ö–∞–ª—ã“£ “õ–∞–ª–∞–π', rus: '–ö–∞–∫ –¥–µ–ª–∞' },
    { kaz: '–ò”ô', rus: '–î–∞' },
    { kaz: '–ñ–æ“õ', rus: '–ù–µ—Ç' },
  ];

  const quizWord = '–°”ô–ª–µ–º';
  const quizOptions = ['–ü–æ–∫–∞', '–ü—Ä–∏–≤–µ—Ç', '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ'];

  const sentence = '–ú–µ–Ω –º–µ–∫—Ç–µ–ø–∫–µ –±–∞—Ä–∞–º—ã–Ω';
  const sentenceWords = ['–Ø', '–≤', '—à–∫–æ–ª—É', '–∏–¥—É'];
  const correctSentence = ['–Ø', '–∏–¥—É', '–≤', '—à–∫–æ–ª—É'];

  const handleLearnClick = () => setScreen('match');
  const handleReviewClick = () => setScreen('quiz');
  const handleGameClick = () => setScreen('sentence');

  const handleAnswer = (option: string) => {
    const correct = option === '–ü—Ä–∏–≤–µ—Ç';
    setIsCorrect(correct);
    setShowResult(true);
    setTimeout(() => {
      setShowResult(false);
      setScreen('sentence');
    }, 1000);
  };

  const handleSentenceSelect = (word: string) => {
    setSentenceAnswer(prev => [...prev, word]);
  };

  const reset = () => {
    setSentenceAnswer([]);
    setScreen('home');
  };

  return (
    <div className="container">
      {screen === 'home' && (
        <>
          <img src={avatar} alt="KazBot Logo" className="logo" />
          <h1>KazBot</h1>
          <p className="description">–¢–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∫–∞–∑–∞—Ö—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ kz</p>
          <div className="buttons">
            <button onClick={handleLearnClick}>üìö –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ</button>
            <button onClick={handleReviewClick}>üß† –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ</button>
            <button onClick={handleGameClick}>üéÆ –ò–≥—Ä–æ–≤–æ–π —Ä–µ–∂–∏–º</button>
          </div>
          <footer>@kzKazakhbot</footer>
        </>
      )}

      {screen === 'match' && (
        <div>
          <h2>–°–æ–µ–¥–∏–Ω–∏ —Å–ª–æ–≤–∞</h2>
          <div className="columns">
            <div>
              <h3>–ö–∞–∑–∞—Ö—Å–∫–∏–π</h3>
              {wordPairs.map((pair, i) => (
                <div key={i}>{pair.kaz}</div>
              ))}
            </div>
            <div>
              <h3>–†—É—Å—Å–∫–∏–π</h3>
              {wordPairs.map((pair, i) => (
                <div key={i}>{pair.rus}</div>
              ))}
            </div>
          </div>
          <button onClick={() => setScreen('quiz')}>‚û°Ô∏è –î–∞–ª–µ–µ</button>
        </div>
      )}

      {screen === 'quiz' && (
        <div>
          <h2>–í—ã–±–µ—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞</h2>
          <p><strong>{quizWord}</strong></p>
          {quizOptions.map((opt, i) => (
            <button
              key={i}
              onClick={() => handleAnswer(opt)}
              style={{
                backgroundColor: showResult
                  ? opt === '–ü—Ä–∏–≤–µ—Ç'
                    ? 'lightgreen'
                    : opt === selected
                    ? 'salmon'
                    : ''
                  : ''
              }}
            >
              {opt}
            </button>
          ))}
        </div>
      )}

      {screen === 'sentence' && (
        <div>
          <h2>–°–æ–±–µ—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</h2>
          <p><strong>{sentence}</strong></p>
          <div className="words">
            {sentenceWords.map((word, i) => (
              <button key={i} onClick={() => handleSentenceSelect(word)}>
                {word}
              </button>
            ))}
          </div>
          <p>–¢–≤–æ–π –æ—Ç–≤–µ—Ç: {sentenceAnswer.join(' ')}</p>
          <button onClick={reset}>üîÑ –ó–∞–≤–µ—Ä—à–∏—Ç—å</button>
        </div>
      )}
    </div>
  );
}

export default App;







