import { useState } from "react";
import "./App.css";
import avatar from "./assets/avatar.png";

function App() {
  const [screen, setScreen] = useState("home");
  const [selectedWord, setSelectedWord] = useState(null);
  const [showResult, setShowResult] = useState(false);
  const [isCorrect, setIsCorrect] = useState(false);
  const [selectedSentence, setSentenceAnswer] = useState([]);

  const wordPairs = [
    { kaz: "–°”ô–ª–µ–º", rus: "–ü—Ä–∏–≤–µ—Ç" },
    { kaz: "“ö–∞–ª—ã“£ “õ–∞–ª–∞–π", rus: "–ö–∞–∫ –¥–µ–ª–∞" },
    { kaz: "–ò”ô", rus: "–î–∞" },
    { kaz: "–ñ–æ“õ", rus: "–ù–µ—Ç" },
  ];

  const quizWord = "–°”ô–ª–µ–º";
  const options = ["–ü–æ–∫–∞", "–ü—Ä–∏–≤–µ—Ç", "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ"];

  const sentence = "–ú–µ–Ω –º–µ–∫—Ç–µ–ø–∫–µ –±–∞—Ä–∞–º—ã–Ω";
  const sentenceWords = ["–Ø", "–≤", "—à–∫–æ–ª—É", "–∏–¥—É"];
  const correctSentence = ["–Ø", "–∏–¥—É", "–≤", "—à–∫–æ–ª—É"];

  const handleAnswer = (option) => {
    const correct = option === "–ü—Ä–∏–≤–µ—Ç";
    setIsCorrect(correct);
    setShowResult(true);
  };

  const handleSentenceSelect = (word) => {
    if (selectedSentence.includes(word)) return;
    setSentenceAnswer([...selectedSentence, word]);
  };

  const reset = () => {
    setShowResult(false);
    setSentenceAnswer([]);
  };

  return (
    <div className="container">
      {screen === "home" && (
        <>
          <img src={avatar} alt="KazBot Logo" className="logo" />
          <h1>KazBot</h1>
          <p className="description">
            –¢–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∫–∞–∑–∞—Ö—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ kz
          </p>
          <div className="buttons">
            <button onClick={() => setScreen("step1")}>üìö –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ</button>
            <button>üß† –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ</button>
            <button>üéÆ –ò–≥—Ä–æ–≤–æ–π —Ä–µ–∂–∏–º</button>
          </div>
          <footer>@kzKazakhbot</footer>
        </>
      )}

      {screen === "step1" && (
        <>
          <h2>üîó –°–æ–µ–¥–∏–Ω–∏—Ç–µ –ø–∞—Ä—ã —Å–ª–æ–≤</h2>
          <div className="match-columns">
            <div>
              {wordPairs.map((pair, i) => (
                <div
                  key={i}
                  className={`word ${selectedWord === pair.kaz ? "selected" : ""}`}
                  onClick={() => setSelectedWord(pair.kaz)}
                >
                  {pair.kaz}
                </div>
              ))}
            </div>
            <div>
              {wordPairs.map((pair, i) => (
                <div
                  key={i}
                  className="word"
                  onClick={() => {
                    if (selectedWord && selectedWord === pair.kaz) {
                      alert("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!");
                    } else {
                      alert("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ");
                    }
                    setSelectedWord(null);
                  }}
                >
                  {pair.rus}
                </div>
              ))}
            </div>
          </div>
          <button onClick={() => setScreen("step2")}>‚û°Ô∏è –î–∞–ª–µ–µ</button>
        </>
      )}

      {screen === "step2" && (
        <>
          <h2>üÉè –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥</h2>
          <p>–ß—Ç–æ –∑–Ω–∞—á–∏—Ç: <b>{quizWord}</b>?</p>
          <div className="options">
            {options.map((option, i) => (
              <button
                key={i}
                onClick={() => handleAnswer(option)}
                className={showResult ? (option === "–ü—Ä–∏–≤–µ—Ç" ? "correct" : "wrong") : ""}
              >
                {option}
              </button>
            ))}
          </div>
          {showResult && (
            <p>{isCorrect ? "‚úÖ –í–µ—Ä–Ω–æ!" : "‚ùå –ù–µ–≤–µ—Ä–Ω–æ!"}</p>
          )}
          <button onClick={() => setScreen("step3")}>‚û°Ô∏è –î–∞–ª–µ–µ</button>
        </>
      )}

      {screen === "step3" && (
        <>
          <h2>üìö –°–æ–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</h2>
          <p>–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: <b>{sentence}</b></p>
          <div className="sentence">
            {sentenceWords.map((word, i) => (
              <button key={i} onClick={() => handleSentenceSelect(word)}>
                {word}
              </button>
            ))}
          </div>
          <p>–í–∞—à –æ—Ç–≤–µ—Ç: <b>{selectedSentence.join(" ")}</b></p>
          {selectedSentence.length === correctSentence.length && (
            <p>
              {JSON.stringify(selectedSentence) === JSON.stringify(correctSentence)
                ? "‚úÖ –í–µ—Ä–Ω–æ!"
                : "‚ùå –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"}
            </p>
          )}
          <button onClick={reset}>üîÑ –°–±—Ä–æ—Å</button>
        </>
      )}
    </div>
  );
}

export default App;







