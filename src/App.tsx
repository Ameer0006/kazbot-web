// App.tsx
import { useState } from "react";
import "./App.css";
import avatar from "./assets/–ú–æ–ª–æ–¥–æ–π —á–µ–ª–æ–≤–µ–∫ –≤ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–º –≥–æ–ª–æ–≤–Ω–æ–º —É–±–æ—Ä–µ.png";

function App() {
  const [screen, setScreen] = useState("home");
  const [selectedWord, setSelectedWord] = useState(null);
  const [showResult, setShowResult] = useState(false);
  const [isCorrect, setIsCorrect] = useState(false);

  const wordPairs = [
    { kaz: "–°”ô–ª–µ–º", rus: "–ü—Ä–∏–≤–µ—Ç" },
    { kaz: "“ö–∞–ª—ã“£ “õ–∞–ª–∞–π", rus: "–ö–∞–∫ –¥–µ–ª–∞" },
    { kaz: "–ò”ô", rus: "–î–∞" },
    { kaz: "–ñ–æ“õ", rus: "–ù–µ—Ç" },
  ];

  const quizWord = "–°”ô–ª–µ–º";
  const options = ["–ü–æ–∫–∞", "–ü—Ä–∏–≤–µ—Ç", "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ"];

  const sentence = "–ú–µ–Ω –º–µ–∫—Ç–µ–ø–∫–µ –±–∞—Ä–∞–º—ã–Ω";
  const words = ["–±–∞—Ä–∞–º—ã–Ω", "–ú–µ–Ω", "–º–µ–∫—Ç–µ–ø–∫–µ", "“Ø–π–≥–µ"];

  const handleAnswer = (option: string) => {
    const correct = option === "–ü—Ä–∏–≤–µ—Ç";
    setIsCorrect(correct);
    setShowResult(true);
    setTimeout(() => {
      setShowResult(false);
    }, 1500);
  };

  if (screen === "lesson") {
    return (
      <div className="container">
        <h1>üîó –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 1: –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å–ª–æ–≤</h1>
        <div className="grid">
          <div className="column">
            {wordPairs.map((pair, idx) => (
              <div
                key={idx}
                className="word-box"
                onClick={() => setSelectedWord(pair.kaz)}
              >
                {pair.kaz}
              </div>
            ))}
          </div>
          <div className="column">
            {wordPairs.map((pair, idx) => (
              <div
                key={idx}
                className={`word-box ${selectedWord === pair.kaz ? "highlight" : ""}`}
              >
                {pair.rus}
              </div>
            ))}
          </div>
        </div>

        <h2>üÉè –ö–∞—Ä—Ç–æ—á–∫–∞</h2>
        <div className="card-quiz">
          <p><strong>{quizWord}</strong> = ?</p>
          {options.map((opt, i) => (
            <button
              key={i}
              onClick={() => handleAnswer(opt)}
              className={`option-btn ${showResult ? (opt === "–ü—Ä–∏–≤–µ—Ç" ? "correct" : "wrong") : ""}`}
              disabled={showResult}
            >
              {opt}
            </button>
          ))}
        </div>

        <h2>üß© –°–æ–±–µ—Ä–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</h2>
        <div className="sentence-construct">
          <p>–°–æ–±–µ—Ä–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: "–Ø –∏–¥—É –≤ —à–∫–æ–ª—É"</p>
          <div className="words">
            {words.map((word, idx) => (
              <button key={idx} className="word-chunk">{word}</button>
            ))}
          </div>
        </div>

        <button onClick={() => setScreen("home")}>‚¨Ö –ù–∞–∑–∞–¥</button>
      </div>
    );
  }

  return (
    <div className="container">
      <img src={avatar} alt="KazBot Logo" className="logo" />
      <h1>KazBot</h1>
      <p className="description">–¢–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∫–∞–∑–∞—Ö—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ kz</p>
      <div className="buttons">
        <button onClick={() => setScreen("lesson")}>üìö –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ</button>
        <button>üß† –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ</button>
        <button>üéÆ –ò–≥—Ä–æ–≤–æ–π —Ä–µ–∂–∏–º</button>
      </div>
      <footer>@kzKazakhbot</footer>
    </div>
  );
}

export default App;


