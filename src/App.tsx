import "./App.css";
import avatar from "./assets/–ú–æ–ª–æ–¥–æ–π —á–µ–ª–æ–≤–µ–∫ –≤ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–º –≥–æ–ª–æ–≤–Ω–æ–º —É–±–æ—Ä–µ.png";
import { useState } from "react";

function App() {
  const [screen, setScreen] = useState("home");
  const [selectedPair, setSelectedPair] = useState<{ kaz: string; rus: string } | null>(null);
  const [quizResult, setQuizResult] = useState<null | boolean>(null);
  const [sentenceResult, setSentenceResult] = useState<null | boolean>(null);

  const wordPairs = [
    { kaz: "–°”ô–ª–µ–º", rus: "–ü—Ä–∏–≤–µ—Ç" },
    { kaz: "“ö–∞–ª–∞–π—Å—ã“£", rus: "–ö–∞–∫ –¥–µ–ª–∞" },
    { kaz: "–ò”ô", rus: "–î–∞" },
    { kaz: "–ñ–æ“õ", rus: "–ù–µ—Ç" },
  ];

  const options = ["–ü–æ–∫–∞", "–ü—Ä–∏–≤–µ—Ç", "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ"];
  const correct = "–ü—Ä–∏–≤–µ—Ç";

  const sentenceKaz = ["–ú–µ–Ω", "–º–µ–∫—Ç–µ–ø–∫–µ", "–±–∞—Ä–∞–º—ã–Ω"];
  const sentenceRus = ["–Ø", "–∏–¥—É", "–≤", "—à–∫–æ–ª—É"];
  const correctRus = ["–Ø", "–∏–¥—É", "–≤", "—à–∫–æ–ª—É"];

  const handleLearnClick = () => {
    setScreen("match");
  };

  const handleReviewClick = () => {
    alert("üß† –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ —Å–ª–æ–≤ ‚Äî –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!");
  };

  const handleGameClick = () => {
    alert("üéÆ –ò–≥—Ä–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...");
  };

  const handlePairSelect = (kaz: string, rus: string) => {
    const pair = wordPairs.find((p) => p.kaz === kaz);
    if (pair && pair.rus === rus) {
      setSelectedPair(pair);
    }
  };

  const handleQuizAnswer = (answer: string) => {
    setQuizResult(answer === correct);
  };

  const handleSentenceCheck = (userSentence: string[]) => {
    setSentenceResult(JSON.stringify(userSentence) === JSON.stringify(correctRus));
  };

  return (
    <div className="container">
      {screen === "home" && (
        <>
          <img src={avatar} alt="KazBot Logo" className="logo" />
          <h1>KazBot</h1>
          <p className="description">
            –¢–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∫–∞–∑–∞—Ö—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ kz
          </p>

          <div className="buttons">
            <button onClick={handleLearnClick}>üìò –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ</button>
            <button onClick={handleReviewClick}>üß† –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ</button>
            <button onClick={handleGameClick}>üéÆ –ò–≥—Ä–æ–≤–æ–π —Ä–µ–∂–∏–º</button>
          </div>

          <footer>@kzKazakhbot</footer>
        </>
      )}

      {screen === "match" && (
        <div className="exercise">
          <h2>–°–æ–µ–¥–∏–Ω–∏ —Å–ª–æ–≤–∞</h2>
          <div className="columns">
            <ul>
              {wordPairs.map((pair) => (
                <li key={pair.kaz}>{pair.kaz}</li>
              ))}
            </ul>
            <ul>
              {wordPairs.map((pair) => (
                <li key={pair.rus} onClick={() => handlePairSelect(pair.kaz, pair.rus)}>{pair.rus}</li>
              ))}
            </ul>
          </div>
          {selectedPair && <p>‚úÖ –í–µ—Ä–Ω–æ: {selectedPair.kaz} ‚Äî {selectedPair.rus}</p>}

          <h2>–í—ã–±–µ—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞: "–°”ô–ª–µ–º"</h2>
          {options.map((opt) => (
            <button
              key={opt}
              onClick={() => handleQuizAnswer(opt)}
              style={{ backgroundColor: quizResult === null ? '' : opt === correct ? 'lightgreen' : 'lightcoral' }}
            >
              {opt}
            </button>
          ))}

          <h2>–°–æ–±–µ—Ä–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: "–ú–µ–Ω –º–µ–∫—Ç–µ–ø–∫–µ –±–∞—Ä–∞–º—ã–Ω"</h2>
          {sentenceRus.map((word, idx) => (
            <span key={idx}>{word} </span>
          ))}
          <button onClick={() => handleSentenceCheck(sentenceRus)}>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
          {sentenceResult !== null && (
            <p style={{ color: sentenceResult ? "green" : "red" }}>
              {sentenceResult ? "‚úÖ –í–µ—Ä–Ω–æ!" : "‚ùå –ù–µ–≤–µ—Ä–Ω–æ"}
            </p>
          )}
        </div>
      )}
    </div>
  );
}

export default App;

       







