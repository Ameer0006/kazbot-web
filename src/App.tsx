import { useState } from 'react';
import './App.css';

const wordPairs = [
  { kz: '–°”ô–ª–µ–º', ru: '–ü—Ä–∏–≤–µ—Ç' },
  { kz: '“ö–∞–ª–∞–π—Å—ã“£', ru: '–ö–∞–∫ –¥–µ–ª–∞' },
  { kz: '–ò”ô', ru: '–î–∞' },
  { kz: '–ñ–æ“õ', ru: '–ù–µ—Ç' },
];

function App() {
  const [selectedKaz, setSelectedKaz] = useState<string | null>(null);
  const [matched, setMatched] = useState<{ [kz: string]: string }>({});
  const [error, setError] = useState(false);

  const handleKazClick = (word: string) => {
    setSelectedKaz(word);
  };

  const handleRuClick = (word: string) => {
    if (!selectedKaz) return;
    const pair = wordPairs.find((p) => p.kz === selectedKaz);
    if (pair?.ru === word) {
      setMatched((prev) => ({ ...prev, [selectedKaz]: word }));
      setError(false);
    } else {
      setMatched({});
      setError(true);
    }
    setSelectedKaz(null);
  };

  const allCorrect = Object.keys(matched).length === wordPairs.length;

  return (
    <div className="container">
      <h2>üîµ –≠—Ç–∞–ø 1: –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–∞—Ä —Å–ª–æ–≤</h2>
      <p>–°–æ–µ–¥–∏–Ω–∏ —Å–ª–æ–≤–∞ –Ω–∞ –∫–∞–∑–∞—Ö—Å–∫–æ–º –∏ —Ä—É—Å—Å–∫–æ–º</p>

      <div className="columns">
        <div className="column">
          {wordPairs.map((pair) => (
            <button
              key={pair.kz}
              className={`word-button ${selectedKaz === pair.kz ? 'selected' : ''}`}
              onClick={() => handleKazClick(pair.kz)}>
              {pair.kz}
            </button>
          ))}
        </div>

        <div className="column">
          {wordPairs.map((pair) => (
            <button
              key={pair.ru}
              className={`word-button ${matched[pair.kz] === pair.ru ? 'matched' : ''}`}
              onClick={() => handleRuClick(pair.ru)}>
              {pair.ru}
            </button>
          ))}
        </div>
      </div>

      {error && <p className="error">‚ùå –û—à–∏–±–∫–∞! –ù–∞—á–Ω–∏ –∑–∞–Ω–æ–≤–æ.</p>}
      {allCorrect && <button className="next-button">‚û° –î–∞–ª–µ–µ</button>}
    </div>
  );
}

export default App;



